//
//  CardDetailsViewController.swift
//  Cards
//
//  Created by irina on 21.05.2020.
//  Copyright (c) 2020 irina. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CardDetailsDisplayLogic: class
{
  func displayCard(viewModel: CardDetails.SelectedCard.ViewModel)
}

class CardDetailsViewController: UIViewController, CardDetailsDisplayLogic
{
  
    @IBOutlet weak var cardView: UIView!
    @IBOutlet weak var cardTypeImageView: UIImageView!
    @IBOutlet weak var cardNumberLbl: UILabel!
    
    var interactor: CardDetailsBusinessLogic?
    var router: (NSObjectProtocol & CardDetailsRoutingLogic & CardDetailsDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = CardDetailsInteractor()
    let presenter = CardDetailsPresenter()
    let router = CardDetailsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    fetchCard()
    
    cardView.layer.cornerRadius = 10
    cardView.layer.masksToBounds = true
  }
  
  // MARK: fetch card
  
   var card = CardDetails.DisplayedCard(type: "", cardNumber: "")
   
   func fetchCard()
   {
     let request = CardDetails.SelectedCard.Request()
    interactor?.fetchCard(card: request)
   }
    
  func displayCard(viewModel: CardDetails.SelectedCard.ViewModel)
  {
    card = viewModel.card
    cardView.backgroundColor = card.type == "Visa" ? UIColor(red: 98.04/225, green: 66.67/225, blue: 7.45/225, alpha: 1) : .black
    cardTypeImageView.image = card.type == "Visa" ? UIImage(named: "visa") : UIImage(named: "masterCard")
    cardNumberLbl.text = "\(card.cardNumber)"
  }
}
