//
//  CardListPresenter.swift
//  Cards
//
//  Created by irina on 21.05.2020.
//  Copyright (c) 2020 irina. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CardListPresentationLogic
{
    func presentFetchedCards(response: CardList.FetchCards.Response)
    func presentAfterCreatCard(response: CardList.CreateCard.Response)
}

class CardListPresenter: CardListPresentationLogic
{
   
    weak var viewController: CardListDisplayLogic?
    
    // MARK: Fetch cards
    
    func presentFetchedCards(response: CardList.FetchCards.Response)
    {
 
        let displayedCards = response.cards.map { formatCard(card: $0) }
        let viewModel = CardList.FetchCards.ViewModel(displayedCards: displayedCards )
        viewController?.displayFetchedCards(viewModel: viewModel)
    }
    
    // MARK: Create card
    
    func presentAfterCreatCard(response: CardList.CreateCard.Response)
    {
 
      let displayedCards = response.cards.map { formatCard(card: $0) }
      let viewModel = CardList.CreateCard.ViewModel(displayedCards: displayedCards)
      viewController?.displayAfterCreateCard(viewModel: viewModel)
    }
    
     // MARK: Format card
     
     private func formatCard(card: Card) -> CardList.DisplayedCard
     {
        let start = card.cardNumber.index(card.cardNumber.endIndex, offsetBy: -4)
        let result = card.cardNumber[start..<card.cardNumber.endIndex]
        let number = String(result)
        return CardList.DisplayedCard(type: card.type, cardNumber: number)
     }
   
}
